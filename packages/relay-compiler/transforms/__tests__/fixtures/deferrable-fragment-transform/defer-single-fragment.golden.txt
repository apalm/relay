query TestDeferSimple {
  me {
    ... on User {
      ... on Node {
        FriendCount_deferrableID: id
      }
    }
  }
}

fragment FriendCount on User {
  friends {
    count
  }
}

query FriendCount_Deferrable(
  $deferrableID: ID
) {
  node(id: $deferrableID) {
    ...FriendCount
  }
}


{
  "kind": "Root",
  "operation": "query",
  "metadata": null,
  "name": "TestDeferSimple",
  "dependentRequests": [
    {
      "operationName": "FriendCount_Deferrable",
      "metadata": {
        "deferrable": true,
        "fragmentName": "FriendCount",
        "rootFieldVariable": "deferrableID"
      },
      "argumentDependencies": [
        {
          "kind": "ArgumentDependency",
          "argumentName": "deferrableID",
          "fromName": "TestDeferSimple",
          "fromPath": "me.FriendCount_deferrableID",
          "ifList": "each",
          "ifNull": "skip"
        }
      ]
    }
  ],
  "argumentDefinitions": [],
  "directives": [],
  "selections": [
    {
      "kind": "LinkedField",
      "alias": null,
      "args": [],
      "directives": [],
      "metadata": null,
      "name": "me",
      "selections": [
        {
          "kind": "InlineFragment",
          "metadata": null,
          "typeCondition": "User",
          "directives": [],
          "selections": [
            {
              "kind": "InlineFragment",
              "metadata": null,
              "typeCondition": "Node",
              "directives": [],
              "selections": [
                {
                  "kind": "ScalarField",
                  "name": "id",
                  "alias": "FriendCount_deferrableID",
                  "args": [],
                  "handles": null,
                  "directives": [],
                  "metadata": {
                    "deferrable": true,
                    "deferred": true,
                    "deferredFragmentName": "FriendCount",
                    "deferredArgumentName": "deferrableID",
                    "deferredArgumentStorageKey": "id",
                    "idType": "ID"
                  },
                  "type": "ID"
                }
              ]
            }
          ]
        }
      ],
      "type": "User"
    }
  ],
  "type": "Query"
}
{
  "kind": "Fragment",
  "directives": [],
  "metadata": null,
  "name": "FriendCount",
  "selections": [
    {
      "kind": "LinkedField",
      "alias": null,
      "args": [],
      "directives": [],
      "metadata": null,
      "name": "friends",
      "selections": [
        {
          "kind": "ScalarField",
          "alias": null,
          "args": [],
          "directives": [],
          "metadata": null,
          "name": "count",
          "type": "Int"
        }
      ],
      "type": "FriendsConnection"
    }
  ],
  "type": "User",
  "argumentDefinitions": []
}
{
  "kind": "Root",
  "operation": "query",
  "metadata": {
    "deferred": true
  },
  "name": "FriendCount_Deferrable",
  "dependentRequests": [],
  "argumentDefinitions": [
    {
      "kind": "LocalArgumentDefinition",
      "metadata": null,
      "name": "deferrableID",
      "defaultValue": null,
      "type": "ID"
    }
  ],
  "directives": [],
  "selections": [
    {
      "kind": "LinkedField",
      "name": "node",
      "alias": null,
      "args": [
        {
          "kind": "Argument",
          "name": "id",
          "metadata": null,
          "value": {
            "kind": "Variable",
            "variableName": "deferrableID",
            "metadata": null,
            "type": "ID"
          },
          "type": "ID"
        }
      ],
      "directives": [],
      "metadata": null,
      "handles": null,
      "selections": [
        {
          "kind": "FragmentSpread",
          "args": [],
          "name": "FriendCount",
          "metadata": {
            "deferred": true,
            "deferredFragmentName": "FriendCount",
            "deferredArgumentName": "deferrableID",
            "deferredArgumentStorageKey": "id",
            "idType": "ID"
          },
          "directives": []
        }
      ],
      "type": "Node"
    }
  ],
  "type": "Query"
}
